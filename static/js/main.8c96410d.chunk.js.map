{"version":3,"sources":["components/editor.js","components/preview.js","App.js","index.js"],"names":["editor","render","handleChange","className","type","id","cols","rows","value","onChange","preview","dangerouslySetInnerHTML","__html","App","marked","require","setOptions","renderer","Renderer","gfm","breaks","useState","markdown","setMarkdown","event","target","ReactDOM","StrictMode","document","getElementById"],"mappings":"gOAiBeA,EAfA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAEtB,OACI,sBAAKC,UAAU,SAAf,UACI,wBAAQA,UAAU,SAAlB,oBACA,0BACIC,KAAK,OACLC,GAAG,SACHC,KAAK,KAAKC,KAAK,KACfC,MAAOP,EACPQ,SAAUP,QCDXQ,EATC,SAAC,GAAgB,IAAdT,EAAa,EAAbA,OACf,OACI,qBAAKI,GAAG,UAAUF,UAAU,UACxBQ,wBAAyB,CACrBC,OAAQX,MCmETY,MApEf,WACE,IA8CMC,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CAChBC,SAAU,IAAIH,EAAOI,SACrBC,KAAK,EACLC,QAAQ,IAnDG,MAsDmBC,mBArDd,0rCADL,mBAsDNC,EAtDM,KAsDIC,EAtDJ,KA4Db,OACE,sBAAKpB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQF,OAAQqB,EAAUpB,aANP,SAAAsB,GACnBD,EAAYC,EAAMC,OAAOjB,UAMzB,cAAC,EAAD,CAASP,OAAQa,EAAOQ,SC/D9BI,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8c96410d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst editor = ( {render, handleChange} ) => {\r\n\r\n    return (\r\n        <div className=\"editor\">\r\n            <header className=\"header\">Editor</header>\r\n            <textarea \r\n                type=\"text\"\r\n                id=\"editor\" \r\n                cols=\"70\" rows=\"15\" \r\n                value={render} \r\n                onChange={handleChange}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default editor","import React from 'react'\r\n\r\nconst preview = ( {render} ) => {\r\n    return (\r\n        <div id=\"preview\" className=\"preview\"\r\n            dangerouslySetInnerHTML={{\r\n                __html: render}}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default preview\r\n","import './App.css';\nimport Editor from './components/editor';\nimport Preview from './components/preview';\nimport React, {useState} from 'react';\n\nfunction App() {\n  const markdownText = `# Welcome to my React Markdown Previewer!\n\n  ## This is a sub-heading...\n  ### And here's some other cool stuff:\n  \n  Heres some code, \\`<div></div>\\`, between 2 backticks.\n  \n  \\`\\`\\`\n  // this is multi-line code:\n  \n  function anotherExample(firstLine, lastLine) {\n    if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n      return multiLineCode;\n    }\n  }\n  \\`\\`\\`\n  \n  You can also make text **bold**... whoa!\n  Or _italic_.\n  Or... wait for it... **_both!_**\n  And feel free to go crazy ~~crossing stuff out~~.\n  \n  There's also [links](https://www.freecodecamp.com), and\n  > Block Quotes!\n  \n  And if you want to get really crazy, even tables:\n  \n  Wild Header | Crazy Header | Another Header?\n  ------------ | ------------- | -------------\n  Your content can | be here, and it | can be here....\n  And here. | Okay. | I think we get it.\n  \n  - And of course there are lists.\n    - Some are bulleted.\n       - With different indentation levels.\n          - That look like this.\n  \n  \n  1. And there are numbererd lists too.\n  1. Use just 1s if you want!\n  1. And last but not least, let's not forget embedded images:\n  \n  ![React Logo w/ Text](https://goo.gl/Umyytc)\n  `\n\n \n  const marked = require(\"marked\");\n  marked.setOptions({\n    renderer: new marked.Renderer(),\n    gfm: true,\n    breaks: true\n  });\n\n  const [markdown, setMarkdown] = useState(markdownText);\n\n  const handleOnChange = event => {\n      setMarkdown(event.target.value);\n    }\n\n  return (\n    <div className=\"Container\">\n      <Editor render={markdown} handleChange={handleOnChange}/>\n      <Preview render={marked(markdown)}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}